# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- Playerbot

pool:
  vmImage: ubuntu-latest

steps:
- script: 'git clone https://github.com/liyunfan1223/mod-playerbots.git --branch=master'
  workingDirectory: 'modules'
  displayName: '获取mod-playerbots'
#- script: 'git clone https://github.com/azerothcore/mod-eluna.git mod-eluna'
#  workingDirectory: 'modules'
#  displayName: '获取mod-eluna'
- script: 'git clone https://github.com/azerothcore/mod-ah-bot.git'
  workingDirectory: 'modules'
  displayName: 'mod-ah-bot'
- script: 'ls ./'
  workingDirectory: 'modules'
  displayName: '显示拉取的内容'
- script: './acore.sh docker build'
  displayName: '构建docker镜像'
- script: 'docker images'
  displayName: '显示docker镜像'
- script: "echo '$(docker_psw)' | docker login --username=$(docker_user) registry.us-west-1.aliyuncs.com --password-stdin"
  displayName: '登录registry'
- script: 'docker tag acore/ac-wotlk-authserver:master registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-authserver:$(git log --pretty=format:"%h" -1) && docker  push registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-authserver:$(git log --pretty=format:"%h" -1)'
  displayName: '推送ac-wotlk-authserver'
- script: 'docker tag acore/ac-wotlk-worldserver:master registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-worldserver:$(git log --pretty=format:"%h" -1) &&  docker  push  registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-worldserver:$(git log --pretty=format:"%h" -1)'
  displayName: '推送acore/ac-wotlk-worldserver'
- script: 'docker tag acore/ac-wotlk-db-import:master registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-db-import:$(git log --pretty=format:"%h" -1) &&   docker  push registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-db-import:$(git log --pretty=format:"%h" -1)'
  displayName: '推送ac-wotlk-db-import'
- script: 'docker tag acore/ac-wotlk-client-data:master registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-client-data:$(git log --pretty=format:"%h" -1) &&   docker  push registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-client-data:$(git log --pretty=format:"%h" -1)'
  displayName: '推送ac-wotlk-db-import'
#- script: mkdir build 
#- task: CmdLine@2
#  inputs:
#    script: 'sudo apt-get update && sudo apt-get install git cmake make gcc g++ clang libmysqlclient-dev libssl-dev libbz2-dev libreadline-dev libncurses-dev mysql-server libboost-all-dev'
#    workingDirectory: './'
#  displayName: '安装编译环境'
#
#- task: CmdLine@2
#  inputs:
#    script: 'cmake ../ -DCMAKE_INSTALL_PREFIX=$HOME/azeroth-server/ -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DWITH_WARNINGS=1 -DTOOLS_BUILD=all -DSCRIPTS=static -DMODULES=static'
#    workingDirectory: 'build/'
#  displayName: '配置cmake'
#- task: CmdLine@2
#  inputs:
#    script: 'make -j 4'
#    workingDirectory: 'build/'
#  displayName: 'make'
#- task: CmdLine@2
#  inputs:
#    script: 'make install'
#    workingDirectory: 'build/'
#  displayName: 'make install'
#
#- task: CmdLine@2
#  inputs:
#    script: 'ls ~/azeroth-server/'
#    workingDirectory: './'
#  displayName: '显示编译结果'


