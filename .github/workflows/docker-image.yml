name: Docker Image CI

on:
  push:
    branches: [ "Playerbot" ]
  pull_request:
    branches: [ "Playerbot" ]

env:
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1
  master_sha: 'd0d760b'
  playerbots_sha: 'fa5b66b'
  ah_bot_sha: '8b06eb4'
  solo_lfg_sha: '97bf902'
  #arena_sha: 'd8fc2b6'
  eluna_sha: 'e00386f'

jobs:
  build-containers:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      if: ${{ env.master_sha != '' }}
      with:
        fetch-depth: 0
    - run: git checkout $master_sha
      if: ${{ env.master_sha != '' }}
    - name: pwd && ls -l 
      run: pwd && ls -l 
    #gitag
    - name: make gitag
      if: ${{ env.master_sha != '' }}
      run: echo GITAG=$(git log --pretty=format:"%h" -1) >> $GITHUB_ENV
      working-directory: ./
    #mod-playerbots
    - name: get mod-playerbots
      uses: actions/checkout@v4
      if: ${{ env.playerbots_sha != '' }}
      with:
        repository: liyunfan1223/mod-playerbots
        fetch-depth: 0
        path: modules/mod-playerbots
    - run: git checkout $playerbots_sha
      if: ${{ env.playerbots_sha != '' }}
      working-directory: modules/mod-playerbots
    - name: make gitag_mod_playerbots
      if: ${{ env.playerbots_sha != '' }}
      run: echo GITAG_MOD_PLAYERBOTS=bot$(git log --pretty=format:"%h" -1) >> $GITHUB_ENV
      working-directory: modules/mod-playerbots
    #mod-ah-bot
    - name: get mod-ah-bot
      uses: actions/checkout@v4
      if: ${{ env.ah_bot_sha != '' }}
      with:
        repository: azerothcore/mod-ah-bot
        fetch-depth: 0
        path: modules/mod-ah-bot
    - run: git checkout $ah_bot_sha
      if: ${{ env.ah_bot_sha != '' }}
      working-directory: modules/mod-ah-bot
    - name: make gitag_mod_ah_bot
      if: ${{ env.ah_bot_sha != '' }}
      run: echo GITAG_MOD_AH_BOT=ah$(git log --pretty=format:"%h" -1) >> $GITHUB_ENV
      working-directory: modules/mod-ah-bot
    #mod-solo-lfg
    - name: get mod-solo-lfg
      uses: actions/checkout@v4
      if: ${{ env.solo_lfg_sha != '' }}
      with:
        repository: azerothcore/mod-solo-lfg
        fetch-depth: 0
        path: modules/mod-solo-lfg
    - run: git checkout $solo_lfg_sha
      if: ${{ env.solo_lfg_sha != '' }}
      working-directory: modules/mod-solo-lfg
    - name: make gitag_mod_solo_lfg
      if: ${{ env.solo_lfg_sha != '' }}
      run: echo GITAG_MOD_SOLO_LFG=lfg$(git log --pretty=format:"%h" -1) >> $GITHUB_ENV
      working-directory: modules/mod-solo-lfg
    #mod-eluna
    - name: get mod-eluna
      uses: actions/checkout@v4
      if: ${{ env.eluna_sha != '' }}
      with:
        repository: azerothcore/mod-eluna
        fetch-depth: 0
        path: modules/mod-eluna
    - run: git checkout $eluna_sha
      if: ${{ env.eluna_sha != '' }}
      working-directory: modules/mod-eluna
    - name: make gitag_mod_eluna
      if: ${{ env.eluna_sha != '' }}
      run: echo GITAG_MOD_ELUNA=lua$(git log --pretty=format:"%h" -1) >> $GITHUB_ENV
      working-directory: modules/mod-eluna
    #mod-1v1-arena
    - name: get mod-1v1-arena
      uses: actions/checkout@v4
      if: ${{ env.arena_sha != '' }}
      with:
        repository: azerothcore/mod-1v1-arena
        fetch-depth: 0
        path: modules/mod-1v1-arena
    - run: git checkout $arena_sha
      if: ${{ env.arena_sha != '' }}
      working-directory: modules/mod-1v1-arena
    - name: make gitag_mod_1v1_arena
      if: ${{ env.arena_sha != '' }}
      run: echo GITAG_MOD_1V1_ARENA=1v1$(git log --pretty=format:"%h" -1) >> $GITHUB_ENV
      working-directory: modules/mod-1v1-arena
    #show tags
    - name: make docker image tag
      run: echo IMGTAG=$GITAG-$GITAG_MOD_PLAYERBOTS-$GITAG_MOD_AH_BOT-$GITAG_MOD_SOLO_LFG-$GITAG_MOD_1V1_ARENA-$GITAG_MOD_ELUNA >> $GITHUB_ENV
    - name: show docker tag
      run: echo $IMGTAG

    - name: Get version
      id: version
      run: |
        version=$IMGTAG
        echo "version=$version" >> $GITHUB_OUTPUT
    #build images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: build worldserver
      uses: ./.github/actions/docker-tag-and-build
      with:
        component-name: registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-worldserver
        version: ${{ steps.version.outputs.version }}
        push: true

    - name: build authserver
      uses: ./.github/actions/docker-tag-and-build
      with:
        component-name: registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-authserver
        version: ${{ steps.version.outputs.version }}
        push: true

    - name: build db-import
      uses: ./.github/actions/docker-tag-and-build
      with:
        component-name: registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-db-import
        version: ${{ steps.version.outputs.version }}
        push: true

    - name: build client-data
      uses: ./.github/actions/docker-tag-and-build
      with:
        component-name: registry.us-west-1.aliyuncs.com/out-of-wall/ac-wotlk-client-data
        version: ${{ steps.version.outputs.version }}
        push: true

    - name: build tools
      uses: ./.github/actions/docker-tag-and-build
      with:
        component-name: registry.us-west-1.aliyuncs.com/out-of-wall/ac-tools
        version: ${{ steps.version.outputs.version }}
        push: true

    - name: docker images
      run: docker images
          
    
          
